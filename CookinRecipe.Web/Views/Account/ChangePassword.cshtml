@{
    ViewBag.Title = "Đổi mật khẩu";
}
<div class="min-h-screen flex items-center justify-center bg-gray-100 px-4 py-10">
    <div class="w-full max-w-lg bg-white p-8 rounded-2xl shadow-xl space-y-6">
        <h2 class="text-2xl font-bold text-center text-blue-600">@ViewBag.Title</h2>

        <form action="~/Account/ChangePassword" method="post" class="space-y-5">
            @Html.AntiForgeryToken()
            @{
                var user = User.GetUserData();
                if (user != null)
                {
                    <input type="hidden" name="userName" value="@user.Email" />
                }
            }

            @* Mật khẩu cũ *@
            <div class="relative">
                <label class="block text-sm font-medium text-gray-700 mb-1">Mật khẩu cũ</label>
                <input type="password" id="oldPassword" name="oldPassword" value="@ViewBag.oldPassword" required
                       class="w-full px-4 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500" />
                <i class="fa-solid fa-eye absolute right-3 top-9 text-gray-500 cursor-pointer" onclick="togglePassword('oldPassword', this)"></i>
            </div>

            @* Mật khẩu mới *@
            <div class="relative">
                <label class="block text-sm font-medium text-gray-700 mb-1">Mật khẩu mới</label>
                <input type="password" id="newPassword" name="newPassword" value="@ViewBag.newPassword" required
                       class="w-full px-4 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500" />
                <i class="fa-solid fa-eye absolute right-3 top-9 text-gray-500 cursor-pointer" onclick="togglePassword('newPassword', this)"></i>
                
            </div>

            @* Xác nhận mật khẩu mới *@
            <div class="relative">
                <label class="block text-sm font-medium text-gray-700 mb-1">Xác nhận mật khẩu mới</label>
                <input type="password" id="confirmPassword" name="confirmPassword" value="@ViewBag.confirmPassword" required
                       class="w-full px-4 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500" />
                <i class="fa-solid fa-eye absolute right-3 top-9 text-gray-500 cursor-pointer" onclick="togglePassword('confirmPassword', this)"></i>
                
            </div>

            @* Nút *@
            <div class="flex justify-between items-center pt-4">
                <a href="@Url.Content("~")"
                   class="bg-gray-200 text-gray-700 hover:bg-gray-300 transition px-4 py-2 rounded font-medium">
                    Bỏ qua
                </a>
                <button type="submit"
                        class="bg-blue-600 text-white hover:bg-blue-700 transition px-5 py-2 rounded font-medium">
                    Đổi mật khẩu
                </button>
            </div>
        </form>

        <div id="notification-container" style="position: fixed; top: 20px; width: 100%; display: flex; justify-content: center; z-index: 1000;"></div>

    </div>
</div>

@section scripts {
    <script>
        function ThongBao(noidung, type) {
            const notificationContainer = document.getElementById('notification-container');

            const thongbaoDiv = document.createElement('div');
            thongbaoDiv.classList.add('thongbao');
            thongbaoDiv.classList.add(type);

            const contentSpan = document.createElement('span');
            contentSpan.textContent = noidung;
            thongbaoDiv.appendChild(contentSpan);

            const closeButton = document.createElement('span');
            closeButton.classList.add('thongbao-close');
            closeButton.textContent = '×';
            closeButton.onclick = function () {
                thongbaoDiv.remove();
            };
            thongbaoDiv.appendChild(closeButton);

            if (notificationContainer.firstChild) {
                notificationContainer.insertBefore(thongbaoDiv, notificationContainer.firstChild);
            } else {
                notificationContainer.appendChild(thongbaoDiv);
            }
            setTimeout(() => {
                thongbaoDiv.remove();
            }, 5000);
        }

        function togglePassword(id, icon) {
            var input = document.getElementById(id);
            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                input.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        }
        var errorMessage = @Json.Serialize(TempData["ErrorMessage"]);
        var successMessage = @Json.Serialize(TempData["SuccessMessage"]);

        if (errorMessage && errorMessage.trim() !== '') {
            ThongBao(errorMessage, 'danger');
        }

        if (successMessage && successMessage.trim() !== '') {
            ThongBao(successMessage, 'success');
            setTimeout(function () {
                window.location.href = '@Url.Action("Logout")';
            }, 3000);
        }

        

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form');
            const newPasswordInput = document.getElementById('newPassword');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const newPasswordValidation = document.querySelector('span[data-valmsg-for="newPassword"]');
            const confirmPasswordValidation = document.querySelector('span[data-valmsg-for="confirmPassword"]');

            form.addEventListener('submit', function (event) {
                let isValid = true;

                if (newPasswordInput.value !== confirmPasswordInput.value) {
                    confirmPasswordValidation.textContent = 'Mật khẩu xác nhận không khớp.';
                    confirmPasswordValidation.style.display = 'block';
                    isValid = false;
                } else {
                    confirmPasswordValidation.textContent = '';
                    confirmPasswordValidation.style.display = 'none';
                }

                if (!isValid) {
                    event.preventDefault();
                }
            });
        });
    </script>
    <style>
        /* CSS for ThongBao notifications */
        .thongbao {
            padding: 15px 20px;
            margin-bottom: 10px;
            border-radius: 5px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: 80%; /* Adjust as needed */
            max-width: 600px; /* Adjust as needed */
            box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Slightly softer shadow */
            /* Remove default color: #fff; as it will be overridden by danger/success */
        }

            .thongbao.danger {
                background-color: #FEE2E2; /* Light red background */
                color: #DC2626; /* Darker red text */
            }

            .thongbao.success {
                background-color: #D1FAE5; /* Light green background (Emerald-100 like) */
                color: #059669; /* Darker green text (Emerald-600 like) */
            }

        .thongbao-close {
            margin-left: 20px;
            cursor: pointer;
            font-weight: bold;
            font-size: 1.2em;
            /* Inherit color from parent (.thongbao.danger or .thongbao.success) */
            color: inherit;
        }

        /* Existing styles */
        .animate-fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
}