@using CookinRecipe.BusinessLayers
@using CookinRecipe.DomainModels
@{
    Layout = "_Layout";
}
    <!-- Dish -->
    <div class="mt-20 md:max-w-5xl md:w-7/10 w-full mx-auto bg-white p-6 rounded-lg shadow-lg">
        <!-- Video Section -->
    @{
        if (Model.Recipe.RecipeVideo != null)
        {
            <div id="video-container" class="relative bg-black flex items-center justify-center">
                <video id="recipe-video" class="w-full rounded-lg">
                    <source src="~/Themes/videos/@Model.Recipe.RecipeVideo" type="video/mp4">
                    Trình duyệt của bạn không hỗ trợ dạng video này.
                </video>
                <button id="play-button" class="absolute" onclick="playVideo()">
                    <div class="bg-black bg-opacity-60 text-white text-lg font-semibold px-4 py-2 rounded-full flex items-center">
                        <span class="mr-2">XEM</span>
                        <img src="~/Themes/assets/images/play-icon.png" alt="Play" class="w-6 h-6">
                    </div>
                </button>
            </div>
        }
        else
        {
            <div id="video-container" class="relative bg-black flex items-center justify-center">
                <img src="~/Themes/videos/@Model.Recipe.RecipeVideo" class="w-full rounded-lg" alt="Hình ảnh món ăn">
            </div>
        }
    }
       

        <!-- Recipe Info -->
        <div class="text-center mt-4">
        <p class="text-sm text-gray-500">CÔNG THỨC CỦA @UserDataService.GetUser(Model.Recipe.AuthorID)</p>
            <h1 class="text-2xl font-bold">@Model.Recipe.RecipeName</h1>
            <p class="text-lg px-4 text-gray-600 italic">@Model.Recipe.Description</p>
            <a href="#rating">
                <p class="text-blue-600 text-lg">★★★★☆ <b>4.9</b> (2912)</p>
            </a>
        </div>

        <!-- Details Section -->
        <div class="grid grid-cols-3 gap-2 mt-4">
        <div><strong>Mức độ:</strong> @Model.Recipe.Level</div>
        <div><strong>Thời gian:</strong> @Model.Recipe.PrepTime phút</div>
            <div><a href="#comment"><strong>Bình luận:</strong> 20</a></div>
        <div><strong>Phục vụ:</strong> @Model.Recipe.Serving người ăn</div>
            <div><strong>Calo:</strong> 2250 kcal</div>
            <div><a href="#likeDish"><strong>Lượt thích:</strong> 400</a></div>
        </div>

        <!-- Save Recipe Button -->
        <div class="text-center mt-4">
            <button id="saveBtn"
                class="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-2 rounded-full"><i
                    class="fas fa-bookmark"></i> Lưu</button>
        </div>

        <!-- Ingredients & Directions Section -->
        <div class="flex flex-col md:flex-row gap-6 mt-6">
            <!-- Ingredients Section -->
            <div class="w-full md:w-1/3">
                <h2 class="text-xl font-semibold border-b pb-2">Nguyên liệu:</h2>
                <ul class="mt-2">
                    <li class="flex">
                        <input type="checkbox" onclick="toggleIngredient(this)">
                        <span class="cursor-pointer ml-3" onclick="this.previousElementSibling.click()">Chanh</span>
                    </li>
                </ul>
            </div>

            <!-- Directions and Note Sections -->
            <div class="w-full md:w-2/3">
                <h2 class="text-xl font-semibold">Các bước làm:</h2>
                <div class="mt-2 border-t pt-2 flex">
                    <p class="font-bold text-2xl">1</p>
                    <p class="ml-4">Step 1</p>
                </div>
                <div class="mt-2 border-t pt-2 flex">
                    <img src="~/Themes/design/images/butterChicken3.jpeg" class="w-full mx-auto md:w-1/2 mt-4"
                        alt="dishPicture">
                </div>
                <div class="mt-6 p-4 bg-blue-100 rounded-lg">
                    <div class="flex">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-yellow-500" viewBox="0 0 20 20"
                            fill="currentColor">
                            <path fill-rule="evenodd"
                                d="M8.257 3.099c.765-1.36 2.721-1.36 3.486 0l6.216 11.056c.73 1.298-.229 2.845-1.743 2.845H3.784c-1.514 0-2.473-1.547-1.743-2.845l6.216-11.056zM11 14a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-.993.883L9 6v4a1 1 0 001.993.117L11 10V6a1 1 0 00-1-1z"
                                clip-rule="evenodd" />
                        </svg>
                        <h2 class="text-lg font-bold">Chú ý:</h2>
                    </div>
                    <ul class="list-disc pl-5 text-gray-800 space-y-2">
                        <li>Note 1</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Categories Section -->
        <div class="mt-6 border-t pt-3">
            <h2 class="text-lg font-semibold">Tags:</h2>
            <div class="flex flex-wrap gap-2 mt-2">
                <span class="bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm">Chicken</span>
            </div>
        </div>

        <!-- Like and Rating Section -->
        <div class="mt-6 flex border-t pt-4" id="likeDish">
            <div class="flex w-2/5 mx-auto">
                <svg id="dish-page-like-btn" onClick="toggleLikeButton(this)" class="w-6 h-6 cursor-pointer"
                    fill="#FFFFFF" stroke="red" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z">
                    </path>
                </svg>
                <span id="dish-page-num-likes" class="ml-2">0</span>
            </div>

            <div class="flex justify-center items-center space-x-1 ml-auto w-3/5" id="rating">
                <p class="mr-5 text-lg mx-auto text-blue-600 font-bold ">Đánh giá của bạn: </p>
                <span class="star text-3xl cursor-pointer" data-value="1">★</span>
                <span class="star text-3xl cursor-pointer" data-value="2">★</span>
                <span class="star text-3xl cursor-pointer" data-value="3">★</span>
                <span class="star text-3xl cursor-pointer" data-value="4">★</span>
                <span class="star text-3xl cursor-pointer" data-value="5">★</span>
            </div>
        </div>
    </div>

    <!-- More dish -->
    <div class="md:max-w-5xl mt-8 md:w-7/10 w-full mx-auto bg-white p-6 rounded-lg shadow-lg">
        <h2 class="text-xl font-semibold">Cùng tác giả</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-2 mt-3">
            <div
                class="transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-105 bg-white rounded-lg shadow-lg p-3">
                <img src="~/Themes/design/images/butterChicken3.jpeg" alt="Chicken Piccata"
                    class="w-full h-40 object-cover rounded">
                <h3 class="mt-2 font-semibold text-center overflow-ellipsis overflow-hidden whitespace-nowrap">Chicken
                    Piccata</h3>
                <div class="text-center text-gray-400 text-sm">CÔNG THỨC</div>
                <div class="text-center text-gray-400 text-sm"><b>Thời gian:</b> 30 phút </div>
                <div class="flex items-center justify-center">
                    <div class="flex justify-center text-red-500">★★★★☆</div>
                    <p class="text-gray-500 ml-3">7</p>
                </div>
            </div>


        </div>

    </div>

    <!--Comments-->
    <div class="py-5 flex justify-center" id="comment">
        <div class="w-11/12 md:w-7/10 w-full md:mx-8 md:flex md:max-w-5xl shadow-lg rounded-lg">
            <form class="w-full bg-white rounded-lg px-4 pt-2">
                <div class="flex flex-wrap -mx-3 mb-6">
                    <h2 class="px-4 pt-3 pb-2 text-gray-800 text-lg font-medium">Bình luận</h2>
                    <div class="w-full md:w-full px-3 mb-2 mt-2">
                        <textarea id="dish-new-comment-text"
                            class="bg-gray-100 rounded border border-gray-400 leading-normal resize-none w-full h-20 py-2 px-3 font-regular placeholder-gray-700 focus:outline-none focus:bg-white"
                            name="cmt" placeholder='Nhập bình luận của bạn' required></textarea>
                    </div>
                    <div class="w-full md:w-full flex items-start md:w-full px-3">
                        <div class="flex items-start w-1/2 text-gray-700 px-2 mr-auto">
                            <svg fill="none" class="w-5 h-5 text-gray-600 mr-1" viewBox="0 0 24 24"
                                stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <p class="text-xs md:text-sm pt-px">Bạn phải đăng nhập trước khi bình luận</p>
                        </div>
                        <div class="-mr-1">
                            <input onClick="onCommentSubmitted()" type='submit'
                                class="bg-gradient-to-r from-blue-600 to-purple-600 text-white font-medium py-1 px-4 border rounded-lg tracking-wide mr-1 hover:bg-blue-700 cursor-pointer"
                                value='Gửi'>
                        </div>
                    </div>
            </form>
            </div>

            <!--Previously added comments-->
            <p id="dish-comments" class="mx-auto text-center text-sm font-medium text-gray-400 mt-4">Chưa có bình luận
                nào!</p>
            <div id="dish-no-comments" class="w-full px-4 pt-2 pb-2 mt-4">
                <div class="flex flex-row w-full p-2 border-t pt-4">
                    <img class="w-14 md:w-20 h-14 md:h-20 mr-2 object-cover rounded-full cursor-pointer"
                        src="~/Themes/assets/images/default-profile.jpeg" />
                    <div class="ml-2 w-full">
                        <div class="flex">
                            <div class="commentBox">
                                <h2 class="text-gray-800 text-lg font-medium mb-2 cursor-pointer">AnnieYZL</h2>
                                <p id="commentText" class="font-regular text-gray-600">Hello ae</p>
                                <textarea id="editInput" class="w-full hidden p-2 border rounded" rows="5"></textarea>
                                <div class="flex justify-end mt-2 hidden" id="editActions">
                                    <button onclick="cancelEdit()"
                                        class="px-3 py-1 bg-gray-200 text-white rounded">Hủy</button>
                                    <button onclick="saveCmt()"
                                        class="ml-3 px-3 py-1 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded mr-2">Lưu</button>
                                </div>
                            </div>
                            <div class="relative ml-auto">
                                <!-- Nút mở menu (icon 3 chấm dọc) -->
                                <button onclick="toggleOption(event)" class="p-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none"
                                        viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M12 6v.01M12 12v.01M12 18v.01" />
                                    </svg>
                                </button>
                                <!-- Menu tùy chọn -->
                                <div id="optionbar"
                                    class="absolute right-0 mt-2 w-40 bg-white border rounded shadow-lg hidden">
                                    <button class="block w-full text-left px-4 py-2 hover:bg-blue-50"
                                        onclick="editCmt()"><i class="fa fa-edit"></i> Chỉnh sửa</button>
                                    <button class="block w-full text-left px-4 py-2 hover:bg-blue-50 text-red-500"
                                        onclick="deleteCmt()"><i class="fa fa-trash-alt"></i> Xóa bình luận</button>
                                </div>
                                <script>
                                    function toggleOption(event) {
                                        event.stopPropagation();
                                        document.getElementById("optionbar").classList.toggle("hidden");
                                    }

                                    function closeOption(event) {
                                        if (!document.getElementById("optionbar").contains(event.target) && event.target.id !== "optionbar-button") {
                                            document.getElementById("optionbar").classList.add("hidden");
                                        }
                                    }

                                    function editCmt() {
                                        document.getElementById("optionbar").classList.add("hidden");
                                        document.getElementById("commentText").classList.add("hidden");
                                        document.getElementById("editInput").classList.remove("hidden");
                                        document.getElementById("editActions").classList.remove("hidden");
                                        document.getElementById("editInput").value = document.getElementById("commentText").innerText;
                                    }

                                    function saveCmt() {
                                        document.getElementById("commentText").innerText = document.getElementById("editInput").value;
                                        cancelEdit();
                                    }

                                    function cancelEdit() {
                                        document.getElementById("commentText").classList.remove("hidden");
                                        document.getElementById("editInput").classList.add("hidden");
                                        document.getElementById("editActions").classList.add("hidden");
                                    }

                                    function deleteCmt() {
                                        if (confirm("Bạn có chắc chắn muốn xóa bình luận này?")) {
                                            alert("Đã xóa bình luận!");
                                        }
                                    }
                                </script>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="mx-auto flex justify-center mt-6">
                <button class="px-4 py-2 mx-1 bg-gray-300 text-gray-700 rounded">«</button>
                <button
                    class="px-4 py-2 mx-1 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded">1</button>
                <button class="px-4 py-2 mx-1 bg-gray-300 text-gray-700 rounded">2</button>
                <button class="px-4 py-2 mx-1 bg-gray-300 text-gray-700 rounded">3</button>
                <button class="px-4 py-2 mx-1 bg-gray-300 text-gray-700 rounded">»</button>
            </div>
        </div>

    <!-- Modal Save -->
    <div id="modalSave" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden">
        <div id="modalSaveContent"
            class="bg-white p-4 rounded-lg shadow-lg w-96 h-[500px] max-h-[80vh] overflow-hidden transition-all">
            <div class="flex justify-between items-center border-b pb-2 mb-2">
                <h2 class="text-xl text-blue-600 font-medium">Lưu vào</h2>
                <button id="closeModalSave" class="text-2xl font-bold text-black">×</button>
            </div>
            <div class="overflow-y-auto max-h-72 min-h-[50px]">
                <ul id="listContainer" class="space-y-2">
                    <li class="p-2 bg-gray-100 rounded flex items-center space-x-3 cursor-pointer hover:bg-gray-200">
                        <img src="~/Themes/assets/images/vLOGO.png" class="w-12 h-12 rounded-lg" alt="Danh sách 1">
                        <div>
                            <span class="font-medium">Danh sách 1</span>
                            <p class="text-sm text-gray-500">30 công thức</p>
                        </div>
                    </li>
                    <li class="p-2 bg-gray-100 rounded flex items-center space-x-3 cursor-pointer hover:bg-gray-200">
                        <img src="~/Themes/assets/images/vLOGO.png" class="w-12 h-12 rounded-lg" alt="Danh sách 2">
                        <div>
                            <span class="font-medium">Danh sách 2</span>
                            <p class="text-sm text-gray-500">9 công thức</p>
                        </div>
                    </li>
                </ul>
            </div>
            <button id="newListBtn"
                class="mt-4 w-full flex items-center justify-center gap-2 bg-gray-200 text-black py-2 rounded-lg hover:bg-gray-300">
                + Bộ sưu tập mới
            </button>
            <button id="doneBtn"
                class="mt-4 w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700">Lưu</button>
        </div>
        <script>
            document.getElementById('saveBtn').addEventListener('click', function () {
                document.getElementById('modalSave').classList.remove('hidden');
            });

            document.getElementById('closeModalSave').addEventListener('click', function () {
                document.getElementById('modalSave').classList.add('hidden');
            });

            document.getElementById('doneBtn').addEventListener('click', function () {
                document.getElementById('modalSave').classList.add('hidden');
            });

            document.getElementById('newListBtn').addEventListener('click', function () {
                if (document.getElementById('listContainer').querySelector('input')) {
                    return;
                }

                const listContainer = document.getElementById('listContainer');
                const newItem = document.createElement('li');
                newItem.className = "p-2 bg-gray-100 rounded flex items-center space-x-3 cursor-pointer hover:bg-gray-200";

                const img = document.createElement('img');
                img.src = "~/Themes/assets/images/vLOGO.png";
                img.className = "w-12 h-12 rounded-lg";
                img.alt = "New List";

                const input = document.createElement('input');
                input.type = "text";
                input.className = "bg-transparent border-b border-gray-500 focus:outline-none";
                input.placeholder = "Nhập tên danh sách";

                const saveBtn = document.createElement('button');
                saveBtn.textContent = "✓";
                saveBtn.className = "ml-2 text-green-500 text-xl font-bold cursor-pointer";

                const cancelBtn = document.createElement('button');
                cancelBtn.textContent = "×";
                cancelBtn.className = "ml-2 text-red-500 text-xl font-bold cursor-pointer";

                saveBtn.addEventListener('click', function () {
                    if (input.value.trim() !== "") {
                        newItem.innerHTML = '';
                        newItem.appendChild(img);
                        const textDiv = document.createElement('div');
                        textDiv.innerHTML = `<span class='font-medium'>${input.value}</span><p class='text-sm text-gray-500'>0 công thức</p>`;
                        newItem.appendChild(textDiv);
                    }
                });

                cancelBtn.addEventListener('click', function () {
                    listContainer.removeChild(newItem);
                });

                newItem.appendChild(img);
                newItem.appendChild(input);
                newItem.appendChild(saveBtn);
                newItem.appendChild(cancelBtn);
                listContainer.appendChild(newItem);
            });
        </script>
    </div>

    <script type="text/javascript" src='~/Themes/scripts/dishPageHandler.js'></script>

    <!-- Script Rating -->
    <script>
        const stars = document.querySelectorAll('.star');
        setStars(0);
        stars.forEach(star => {
            star.addEventListener('mouseover', function () {
                let value = this.getAttribute('data-value');
                highlightStars(value);
            });

            star.addEventListener('mouseleave', function () {
                setStars(userRating || 0);
            });

            star.addEventListener('click', function () {
                let newRating = parseInt(this.getAttribute('data-value'));

                // if (userRating > 0) {
                // Nếu đã đánh giá trước đó, cập nhật lại tổng điểm
                // totalRating = totalRating - userRating + newRating;
                // } else {
                // Nếu là lần đầu đánh giá, tăng số lượt đánh giá
                // totalRating += newRating;
                // totalReviews++;
                // }

                userRating = newRating; // Lưu số sao mới
                // let newAvg = (totalRating / totalReviews).toFixed(1);

                // document.getElementById('average-rating').textContent = newAvg;
                // document.getElementById('review-count').textContent = totalReviews;
                setStars(userRating);
            });
        });
        function highlightStars(value) {
            stars.forEach((star, index) => {
                star.classList.toggle('text-blue-600', index < value);
                star.classList.toggle('text-gray-300', index >= value);
            });
        }

        // Hàm đặt số sao theo điểm trung bình hoặc đánh giá của người dùng
        function setStars(value) {
            stars.forEach((star, index) => {
                star.classList.toggle('text-blue-600', index < Math.round(value));
                star.classList.toggle('text-gray-300', index >= Math.round(value));
            });
        }
    </script>